from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message
from tgbot.keyboards.inline import floor_keyboard, menu_keyboard, mash_keyboard, mode_keyboard
from tgbot.misc.states import Menu
from aiogram.fsm.context import FSMContext
import asyncio

user_router = Router()


@user_router.message(CommandStart())
async def user_start(message: Message):
    await message.answer_sticker(sticker='CAACAgIAAxkBAAEHL09ju_NYDBqyTq65N1BJqyacddxvSQACHxEAAowt_QcWMfHxvTZjli0E')
    await message.answer('–ü—Ä–∏–≤–µ—Ç! –Ø —á–∞—Ç-–±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –Ω–µ –∑–∞–±—ã—Ç—å –æ —Å–≤–æ–∏—Ö –≤–µ—â–∞—Ö ' + 'ü•∞' + '—Å —á–µ–≥–æ –Ω–∞—á–Ω–µ–º?')


@user_router.message(F.text == "–ú–µ–Ω—é")
async def user_ku(message: Message, state: FSMContext):
    await message.answer('–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç', reply_markup=menu_keyboard)
    await state.set_state(Menu.menu)


@user_router.callback_query(F.data == 'stiralka')
async def user_callback1(query, state: FSMContext):
    await query.message.edit_text('–í—ã–±–µ—Ä–∏ —ç—Ç–∞–∂')
    await query.message.edit_reply_markup(reply_markup=floor_keyboard)
    await state.set_state(Menu.stiralka)


@user_router.callback_query(F.data == 'sushilka')
async def user_callback1(query, state: FSMContext):
    await query.message.edit_text('–í—ã–±–µ—Ä–∏ —ç—Ç–∞–∂')
    await query.message.edit_reply_markup(reply_markup=floor_keyboard)
    await state.set_state(Menu.sushechka)

@user_router.message(F.text == "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
async def user_hello(message: Message, state: FSMContext):
    await message.answer('—Ç—É—Ç –±—É–¥–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', reply_markup=mash_keyboard)
    await state.set_state(Menu.instr)


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ inline –∫–Ω–æ–ø–æ–∫ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏
@user_router.callback_query(F.data == '1')
async def user_callback1(query, state: FSMContext):
    await query.message.edit_text('–≤—ã–±–µ—Ä–∏ –º–∞—à–∏–Ω–∫—É')
    await query.message.edit_reply_markup(reply_markup=mash_keyboard)



@user_router.callback_query(F.data == '2')
async def user_callback1(query, state: FSMContext):
    await query.message.edit_text('–≤—ã–±–µ—Ä–∏ –º–∞—à–∏–Ω–∫—É')
    await query.message.edit_reply_markup(reply_markup=mash_keyboard)

@user_router.callback_query(F.data == '3')
async def user_callback1(query, state: FSMContext):
    await query.message.edit_text('–≤—ã–±–µ—Ä–∏ –º–∞—à–∏–Ω–∫—É')
    await query.message.edit_reply_markup(reply_markup=mash_keyboard)

@user_router.callback_query(F.data == 'mash1')
async def user_callback1(query, state: FSMContext):
    await query.message.edit_text('–≤—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º')
    await query.message.edit_reply_markup(reply_markup=mode_keyboard)

@user_router.callback_query(F.data == 'mash2')
async def user_callback1(query, state: FSMContext):
    await query.message.edit_text('–≤—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º')
    await query.message.edit_reply_markup(reply_markup=mode_keyboard)

@user_router.callback_query(F.data == 'mash3')
async def user_callback1(query, state: FSMContext):
    await query.message.edit_text('–≤—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º')
    await query.message.edit_reply_markup(reply_markup=mode_keyboard)

@user_router.callback_query(F.data == 'mode1')
async def user_callback1(query, state: FSMContext):
    await query.message.edit_text('–≤—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º')
    await query.message.edit_reply_markup(reply_markup=mode_keyboard)

@user_router.callback_query(F.data == 'mode2')
async def user_callback1(query, state: FSMContext):
    await query.message.edit_text('–≤—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º')
    await query.message.edit_reply_markup(reply_markup=mode_keyboard)

@user_router.callback_query(F.data == 'mode3')
async def user_callback1(query, state: FSMContext):
    await query.message.edit_text('–≤—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º')
    await query.message.edit_reply_markup(reply_markup=mode_keyboard)
    await state.set_state(Menu.in_progress)
    #—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä –Ω–∞ 30 –º–∏–Ω—É—Ç
    #–ø–æ—Å–ª–µ 30 –º–∏–Ω—É—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
    time = 30
    await asyncio.sleep(time)
    await query.message.edit_text('–í–∞—à–∞ –º–∞—à–∏–Ω–∫–∞ –≥–æ—Ç–æ–≤–∞')
    #–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
    await state.set_state(Menu.finish)

#–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏

@user_router.callback_query(F.data == 'back')
async def user_callback1(query, state: FSMContext):
    pass